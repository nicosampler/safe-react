name: Build/Release Desktop app

# this will help you specify where to run
on:
  push:
    branches:
      # this will run on the specified branch
      - desktop
      - desktop-staging
env:
  REACT_APP_BLOCKNATIVE_KEY: ${{ secrets.REACT_APP_BLOCKNATIVE_KEY }}
  REACT_APP_FORTMATIC_KEY: ${{ secrets.REACT_APP_FORTMATIC_KEY }}
  REACT_APP_GOOGLE_ANALYTICS_ID_MAINNET: ${{ secrets.REACT_APP_GOOGLE_ANALYTICS_ID_MAINNET }}
  REACT_APP_INFURA_TOKEN: ${{ secrets.REACT_APP_INFURA_TOKEN }}
  REACT_APP_PORTIS_ID: ${{ secrets.REACT_APP_PORTIS_ID }}
  REACT_APP_GNOSIS_APPS_URL: ${{ secrets.REACT_APP_GNOSIS_APPS_URL }}
  REACT_APP_INTERCOM_ID: ${{ secrets.REACT_APP_INTERCOM_ID }}
jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      max-parallel: 15
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
   
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 10.16
      - run: yarn install

      - name: Build/Release Desktop App
        uses: nicosampler/action-electron-builder@v1
        with:
          #Build scipt
          build_script_name: build-desktop

          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)

          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: contains(github.ref, 'desktop')

      - name: 'Upload Artifacts Linux'
        if: contains(github.ref, 'desktop-staging') && startsWith(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@v2
        with:
          name: Desktop Linux
          path: ./dist/Safe[ ]Multisig*.AppImage
